# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from koapy.common import DispatchProxyService_pb2 as koapy_dot_common_dot_DispatchProxyService__pb2


class DispatchProxyServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDispatch = channel.unary_unary(
                '/DispatchProxyService/GetDispatch',
                request_serializer=koapy_dot_common_dot_DispatchProxyService__pb2.GetDispatchRequest.SerializeToString,
                response_deserializer=koapy_dot_common_dot_DispatchProxyService__pb2.GetDispatchResponse.FromString,
                )
        self.GetAttr = channel.unary_unary(
                '/DispatchProxyService/GetAttr',
                request_serializer=koapy_dot_common_dot_DispatchProxyService__pb2.GetAttrRequest.SerializeToString,
                response_deserializer=koapy_dot_common_dot_DispatchProxyService__pb2.GetAttrResponse.FromString,
                )
        self.SetAttr = channel.unary_unary(
                '/DispatchProxyService/SetAttr',
                request_serializer=koapy_dot_common_dot_DispatchProxyService__pb2.SetAttrRequest.SerializeToString,
                response_deserializer=koapy_dot_common_dot_DispatchProxyService__pb2.SetAttrResponse.FromString,
                )
        self.CallMethod = channel.unary_unary(
                '/DispatchProxyService/CallMethod',
                request_serializer=koapy_dot_common_dot_DispatchProxyService__pb2.CallMethodRequest.SerializeToString,
                response_deserializer=koapy_dot_common_dot_DispatchProxyService__pb2.CallMethodResponse.FromString,
                )
        self.ConnectEvent = channel.stream_stream(
                '/DispatchProxyService/ConnectEvent',
                request_serializer=koapy_dot_common_dot_DispatchProxyService__pb2.ConnectEventRequest.SerializeToString,
                response_deserializer=koapy_dot_common_dot_DispatchProxyService__pb2.ConnectEventResponse.FromString,
                )


class DispatchProxyServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetDispatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAttr(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAttr(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CallMethod(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConnectEvent(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DispatchProxyServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDispatch': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDispatch,
                    request_deserializer=koapy_dot_common_dot_DispatchProxyService__pb2.GetDispatchRequest.FromString,
                    response_serializer=koapy_dot_common_dot_DispatchProxyService__pb2.GetDispatchResponse.SerializeToString,
            ),
            'GetAttr': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAttr,
                    request_deserializer=koapy_dot_common_dot_DispatchProxyService__pb2.GetAttrRequest.FromString,
                    response_serializer=koapy_dot_common_dot_DispatchProxyService__pb2.GetAttrResponse.SerializeToString,
            ),
            'SetAttr': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAttr,
                    request_deserializer=koapy_dot_common_dot_DispatchProxyService__pb2.SetAttrRequest.FromString,
                    response_serializer=koapy_dot_common_dot_DispatchProxyService__pb2.SetAttrResponse.SerializeToString,
            ),
            'CallMethod': grpc.unary_unary_rpc_method_handler(
                    servicer.CallMethod,
                    request_deserializer=koapy_dot_common_dot_DispatchProxyService__pb2.CallMethodRequest.FromString,
                    response_serializer=koapy_dot_common_dot_DispatchProxyService__pb2.CallMethodResponse.SerializeToString,
            ),
            'ConnectEvent': grpc.stream_stream_rpc_method_handler(
                    servicer.ConnectEvent,
                    request_deserializer=koapy_dot_common_dot_DispatchProxyService__pb2.ConnectEventRequest.FromString,
                    response_serializer=koapy_dot_common_dot_DispatchProxyService__pb2.ConnectEventResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'DispatchProxyService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DispatchProxyService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetDispatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DispatchProxyService/GetDispatch',
            koapy_dot_common_dot_DispatchProxyService__pb2.GetDispatchRequest.SerializeToString,
            koapy_dot_common_dot_DispatchProxyService__pb2.GetDispatchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAttr(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DispatchProxyService/GetAttr',
            koapy_dot_common_dot_DispatchProxyService__pb2.GetAttrRequest.SerializeToString,
            koapy_dot_common_dot_DispatchProxyService__pb2.GetAttrResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAttr(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DispatchProxyService/SetAttr',
            koapy_dot_common_dot_DispatchProxyService__pb2.SetAttrRequest.SerializeToString,
            koapy_dot_common_dot_DispatchProxyService__pb2.SetAttrResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CallMethod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DispatchProxyService/CallMethod',
            koapy_dot_common_dot_DispatchProxyService__pb2.CallMethodRequest.SerializeToString,
            koapy_dot_common_dot_DispatchProxyService__pb2.CallMethodResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConnectEvent(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/DispatchProxyService/ConnectEvent',
            koapy_dot_common_dot_DispatchProxyService__pb2.ConnectEventRequest.SerializeToString,
            koapy_dot_common_dot_DispatchProxyService__pb2.ConnectEventResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
